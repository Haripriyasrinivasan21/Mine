# Generated by Django 3.0 on 2021-05-31 08:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('img', models.ImageField(default='profile.png', upload_to='Profiles/')),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('ph_no', models.CharField(max_length=10)),
                ('pan_no', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=7)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(default='Andhra Pradesh', max_length=20)),
                ('country', models.CharField(default='India', max_length=20)),
                ('idgen', models.TextField(blank=True)),
                ('role', models.IntegerField(choices=[(1, 'Donor'), (2, 'Organisation'), (3, 'Guest')], default=3)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Worker_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_name', models.CharField(max_length=50)),
                ('worker_gen', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Select', 'Select Your Gender')], default='Select', max_length=10)),
                ('worker_dob', models.DateField(null=True)),
                ('worker_age', models.CharField(max_length=10)),
                ('worker_ph', models.CharField(max_length=20)),
                ('worker_add', models.CharField(max_length=100)),
                ('working_as', models.CharField(max_length=100)),
                ('joining_date', models.DateField(null=True)),
                ('yrs_worked', models.CharField(max_length=30)),
                ('exit_date', models.CharField(default='Not Yet Exited', max_length=50)),
                ('worimg', models.ImageField(default='profile.png', upload_to='Worker_profiles/')),
                ('salary', models.CharField(max_length=100)),
                ('wor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rolrq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uname', models.CharField(max_length=50)),
                ('roltype', models.IntegerField(choices=[(1, 'Donor'), (2, 'Organisation')], default=0)),
                ('random_id', models.CharField(max_length=20)),
                ('is_checked', models.BooleanField(default=0)),
                ('ud', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orgdetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(default='Organisation Name', max_length=50)),
                ('found_name', models.CharField(default='Founder Name', max_length=50)),
                ('est_date', models.DateField(null=True)),
                ('no_of_childrens', models.IntegerField(default=0)),
                ('us', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OccDonate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('donating_way', models.CharField(default='On Occasion', max_length=50)),
                ('occ_name', models.CharField(max_length=100)),
                ('donating_to', models.CharField(max_length=50)),
                ('sponsor_way', models.CharField(choices=[('Select', 'Select'), ('Food', 'Food'), ('Clothes', 'Clothes'), ('Money', 'Money')], default='Select', max_length=50)),
                ('donating_on', models.DateField()),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Donor_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donor_name', models.CharField(max_length=50)),
                ('donor_email', models.EmailField(max_length=50)),
                ('donated_thing', models.CharField(max_length=100)),
                ('donated_on', models.DateField(null=True)),
                ('used_for', models.CharField(max_length=200)),
                ('don', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Donate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('ways_to_donate', models.CharField(choices=[('Select', 'Select'), ('Yearly', 'Yearly Once'), ('Monthly', 'Monthly Once'), ('Quarterly', 'Quarterly Once'), ('One Time', 'One time donation')], default='Select', max_length=50)),
                ('donating_to', models.CharField(max_length=50)),
                ('sponsor_way', models.CharField(choices=[('Select', 'Select'), ('Food', 'Food'), ('Clothes', 'Clothes'), ('Money', 'Money')], default='Select', max_length=50)),
                ('donating_date', models.DateField()),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Child_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_name', models.CharField(max_length=50)),
                ('child_gen', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Select', 'Select Your Gender')], default='Select', max_length=10)),
                ('child_dob', models.DateField(null=True)),
                ('child_age', models.CharField(max_length=10)),
                ('joining_date', models.DateField(null=True)),
                ('yrs_stayed', models.CharField(max_length=30)),
                ('exit_date', models.CharField(default='Not Yet Exited', max_length=50)),
                ('chimg', models.ImageField(default='profile.png', upload_to='Children_profiles/')),
                ('about', models.CharField(max_length=500)),
                ('ch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
